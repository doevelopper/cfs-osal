#
# To check this script syntax: https://gitlab.com/doevelopper/cfs-osal/-/ci/lint
#
# sudo usermod -a -G sudo gitlab-runner
# sudo visudo or sudo vi /etc/sudoers
# %gitlab-runner ALL=(ALL) NOPASSWD: ALL

stages:
    - configure
    - compile
    - test-compile
    - unit-test
    - target-package
    - feature-test
    - verify
    - code-review
    - target-install
    - site
    - deploy
    - target-clean

include:
    - local: .gitlab/ci/globals.yml

debug:appplication:build:
    stage: verify
    extends:
        .build-applications
    variables:
#        <<: *common_variables
        BUILD_TYPE: Debug
        BUILD_OPTIONS: ""
#       BUILD_IMAGE: ${STAGING_REGISTRY}/${DTR_NAMESPACE}/${CI_PROJECT_NAME}/${DDS_TYPE}:${VERSION}
        BUILD_IMAGE: docker.io/doevelopper/cfs-dev-tools-common:0.0.1
        GIT_DEPTH: "1"
        GIT_SUBMODULE_STRATEGY: "recursive"
        BUILD_DIRECTORY: ${CI_PROJECT_NAME}-build-${BUILD_TYPE}
        BUILD_GENERATOR: "Unix Makefiles"
        GET_SOURCES_ATTEMPTS: "3"
        ARTIFACT_DOWNLOAD_ATTEMPTS: "2"
        CACHE_KEY: '$(if [[ ! -z ${CI_COMMIT_TAG+x} || "${CI_COMMIT_REF_SLUG}" == "prod" ]]; then echo "${CI_COMMIT_REF_SLUG}"; else echo "not-prod-or-tag"; fi)'
        DTR_NAMESPACE: $CI_PROJECT_NAMESPACE
        PROJECT_SOURCE_DIR: "$CI_PROJECT_DIR"
        PROJECT_NAME: $CI_PROJECT_NAME
        TAG: $CI_BUILD_REF_NAME
        ARCH: amd64
        COMMIT_ID: ${CI_COMMIT_SHA:0:8}
        CCACHE_BASEDIR: $CI_PROJECT_DIR
        BUILD_DATE: $(date +%Y-%m-%d-%H:%M:%S)
        COMMIT_TIME: $(git show -s --format=%ct $CI_APPLICATION_TAG)
        DOCKER_TRUSTED_REGISTRY: ${STAGING_REGISTRY}
        STAGING_DIR: $CI_PROJECT_DIR/${CI_PROJECT_NAME}/${BUILD_TYPE}

.release:appplication:build:
    extends:
        .build-applications
    variables:
        BUILD_TYPE: Release
        BUILD_OPTIONS: ""
        BUILD_IMAGE: ""

.coverage:appplication:build:
    extends:
        .build-applications
    variables:
        BUILD_TYPE: Coverage
        BUILD_OPTIONS: ""
        BUILD_IMAGE: ""

.profiling:appplication:build:
    extends:
        .build-applications
    variables:
        BUILD_TYPE: Profiling
        BUILD_OPTIONS: ""
        BUILD_IMAGE: ""

.relwithdebinfo:appplication:build:
    extends:
        .build-applications
    variables:
        BUILD_TYPE: RelWithDebInfo
        BUILD_OPTIONS: ""
        BUILD_IMAGE: ""

.minsizerel:appplication:build:
    extends:
        .build-applications
    variables:
        BUILD_TYPE: MinSizeRel
        BUILD_OPTIONS: ""
        BUILD_IMAGE: ""

.Code duplicate detection:
    extends:
        .build-applications
    variables:
        BUILD_TYPE: Release
        BUILD_OPTIONS: ""
        BUILD_IMAGE: ""

.Continuous code quality:
    extends:
        .build-applications
    variables:
        BUILD_TYPE: Release
        BUILD_OPTIONS: ""
        BUILD_IMAGE: ""

.Dynamic code analysis:
    extends:
        .build-applications
    variables:
        BUILD_TYPE: Release
        BUILD_OPTIONS: ""
        BUILD_IMAGE: ""

.Dynamic application security testing:
    extends:
        .build-applications
    variables:
        BUILD_TYPE: Release
        BUILD_OPTIONS: ""
        BUILD_IMAGE: ""

.Static application security testing:
    extends:
        .build-applications
    variables:
        BUILD_TYPE: Release
        BUILD_OPTIONS: ""
        BUILD_IMAGE: ""

.Run time application security protection:
    extends:
        .build-applications
    variables:
        BUILD_TYPE: Release
        BUILD_OPTIONS: ""
        BUILD_IMAGE: ""

.Binary code performance:
    extends:
        .build-applications
    variables:
        BUILD_TYPE: Release
        BUILD_OPTIONS: ""
        BUILD_IMAGE: ""

.Publish code quality:
    extends:
        .build-applications
    variables:
        BUILD_TYPE: Release
        BUILD_OPTIONS: ""
        BUILD_IMAGE: ""


