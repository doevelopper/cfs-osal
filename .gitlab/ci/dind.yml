#         cfs-com/.gitlab/ci/dind.yml
#
#               Copyright (c) 2014-2018 A.H.L
#
#        Permission is hereby granted, free of charge, to any person obtaining
#        a copy of this software and associated documentation files (the
#        "Software"), to deal in the Software without restriction, including
#        without limitation the rights to use, copy, modify, merge, publish,
#        distribute, sublicense, and/or sell copies of the Software, and to
#        permit persons to whom the Software is furnished to do so, subject to
#        the following conditions:
#
#        The above copyright notice and this permission notice shall be
#        included in all copies or substantial portions of the Software.
#
#        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
#        EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
#        MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
#        NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
#        LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
#        OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
#        WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

# @purpose
#  Have my own https://github.com/docker/docker-credential-helpers/releases

# docker:dind with docker-compose
# https://about.gitlab.com/2019/07/31/docker-in-docker-with-docker-19-dot-03/
docker:build:docker-base:
    extends: 
        - .docker-hub-dind
    before_script:
        - export GOAL=build
        - export MODULE=dind
        - export DOCKER_FILE=src/main/resources/docker/dind/Dockerfile
        - export VERSIONFILE=${CI_PROJECT_DIR}/src/main/resources/docker/dind/VERSION_FILE
        - "[ -f ${VERSIONFILE} ] && export SEM_VERSION=$(head ${VERSIONFILE}) || export SEM_VERSION=0.0.1" 
        - export BUILD_LOG="2>&1 | tee ${CI_PROJECT_DIR}/dind.log"
        - export DTR_PASSWORD=$DOCKER_PASSWORD
        - apk add bash make git

    script:
        - echo " ${GOAL}ing ${ROOT_IMG_IMAGE}-dind:${SEM_VERSION}"
        - echo " ${CI_JOB_TOKEN} ${DOCKER_TRUSTED_REGISTRY} ${CI_PROJECT_NAMESPACE} ${DOCKER_TRUSTED_REGISTRY}"
        - echo "$DOCKER_PASSWORD" | docker login -u "${CI_PROJECT_NAMESPACE}" --password-stdin ${DOCKER_TRUSTED_REGISTRY}
        # - [ -z $(docker pull ${ROOT_IMG_IMAGE}-dind:${SEM_VERSION}) ] || echo "already exists" &&  exit 0
        - |
            if DOCKER_CLI_EXPERIMENTAL=enabled docker manifest inspect ${ROOT_IMG_IMAGE}-dind:${SEM_VERSION} >/dev/null; then
                echo "== ${ROOT_IMG_IMAGE}-dind:${SEM_VERSION} already exists =="
                echo "== SKipping build =="
                exit 0
            fi
        - make DOCKER_FILE=${DOCKER_FILE} GOAL=${GOAL} ${MODULE} 
        - docker logout ${DOCKER_TRUSTED_REGISTRY} || true
    # only:
       # refs:
           # - schedules
    #    variables:
        #    - $PHASE == "bootstrap"
